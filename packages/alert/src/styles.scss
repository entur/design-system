@use '~@entur/tokens/dist/styles.scss' as t;
@use '~@entur/utils/dist/breakpoints.scss' as breakpoint;

.eds-alert-box {
  border: t.$border-widths-small solid;
  border-radius: t.$border-radiuses-medium;
  color: t.$colors-brand-blue;
  display: flex;
  padding: t.$space-small;
  position: relative;

  // Size overrides
  &--banner {
    padding: t.$space-medium;
    width: 100%;

    @include breakpoint.for-desktop {
      padding: t.$space-large;
    }
  }

  &--toast {
    max-width: 22rem;
    width: 100%;

    animation: t.$timings-slow ease-in-out 0s 1 bounceInRight;
    @include breakpoint.for-desktop {
      min-width: 12rem;
      width: fit-content;
    }

    &--exit-animation {
      animation: t.$timings-slow ease-in-out 0s 1 bounceOutRight;
    }
  }

  &--small {
    font-size: t.$font-sizes-medium;
  }

  &--fit-content {
    width: fit-content;
  }

  // Variants
  &--success {
    background-color: t.$colors-validation-mint-tint;
    border-color: t.$colors-validation-mint;
    color: t.$colors-validation-mint;
  }
  &--info {
    background-color: t.$colors-validation-sky-tint;
    border-color: t.$colors-validation-sky-contrast;
    color: t.$colors-validation-sky;
  }
  &--warning {
    background-color: t.$colors-validation-canary-tint;
    border-color: t.$colors-validation-canary-contrast;
    color: t.$colors-brand-blue;
  }
  &--error {
    background-color: t.$colors-validation-lava-tint;
    border-color: t.$colors-validation-lava-contrast;
    color: t.$colors-validation-lava;
  }
}

.eds-alert-box__icon {
  display: inline-block;
  flex: 0 0 1em;
  font-size: 1.2rem; // Required since the icons are a tiny bit too small
  margin-right: 0.5em;
  margin-top: 0;

  .eds-alert-box--banner &,
  .eds-alert-box--toast & {
    @include breakpoint.for-desktop {
      font-size: t.$space-extra-large; // standalone icon size
      margin-top: -(t.$space-extra-small2);
    }
  }
}

.eds-alert-box__title {
  font-weight: t.$font-weights-heading;
  margin: 0;
}

.eds-alert-box__content {
  color: t.$colors-brand-blue;
  &--no-title,
  &--no-children {
    display: flex;
    align-items: center;
  }

  .eds-alert-box--banner &,
  .eds-alert-box--toast & {
    margin-right: t.$space-extra-large;
  }

  & > *:first-child {
    margin-top: 0;
  }

  & > *:last-child {
    margin-bottom: 0;
  }
}

.eds-alert-box__close-button {
  appearance: none;
  background: none;
  border: 0;
  border-radius: none;
  color: t.$colors-brand-blue;
  cursor: pointer;
  font-size: t.$font-sizes-large;
  height: t.$space-large;
  width: t.$space-large;
  padding: 0;
  position: absolute;
  right: t.$space-medium;
  top: t.$space-medium;

  &:focus {
    outline-offset: t.$outline-offsets-focus;
    outline: t.$outlines-focus;
  }

  @include breakpoint.for-desktop {
    font-size: t.$font-sizes-extra-large2;
    right: t.$space-large;
    top: t.$space-large;
    height: t.$space-large;
    width: t.$space-large;
    .eds-alert-box--toast & {
      right: t.$space-medium;
      top: t.$space-medium;
    }
  }
}

.eds-toast-container {
  position: fixed;
  z-index: t.$z-indexes-toast;
  display: flex;
  align-items: flex-end;
  flex-direction: column;
  &--bottom-right {
    bottom: t.$space-large;
    right: t.$space-large;
    left: t.$space-large;
  }
  &--top-right {
    top: t.$space-large;
    right: t.$space-large;
    left: t.$space-large;
  }

  > * + * {
    margin-top: t.$space-default;
  }

  @include breakpoint.for-desktop {
    left: initial;
  }
}

@keyframes bounceInRight {
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  from {
    opacity: 0;
    transform: translate3d(3000px, 0, 0) scaleX(3);
  }

  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0) scaleX(1);
  }

  75% {
    transform: translate3d(10px, 0, 0) scaleX(0.98);
  }

  90% {
    transform: translate3d(-5px, 0, 0) scaleX(0.995);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes bounceOutRight {
  20% {
    opacity: 1;
    transform: translate3d(-20px, 0, 0) scaleX(0.9);
  }

  to {
    opacity: 0;
    transform: translate3d(2000px, 0, 0) scaleX(2);
  }
}
