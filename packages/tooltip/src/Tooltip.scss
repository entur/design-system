@use '~@entur/tokens/dist/styles.scss' as t;

.eds-tooltip-wrapper {
  display: inline-block;
  position: relative;
}

.eds-tooltip {
  color: var(--components-tooltip-tooltip-standard-text);
  background: var(--components-tooltip-tooltip-standard-fill);
  border-radius: t.$border-radiuses-medium;
  box-shadow: t.$shadows-box-shadow;
  font-size: t.$font-sizes-medium;
  display: flex;
  align-items: center;
  justify-content: space-between;
  min-height: 1rem;
  min-width: 2rem;
  padding: 0.3125rem 0.625rem;
  position: absolute;
  z-index: t.$z-indexes-popover;
  max-width: 32rem;
  .eds-contrast & {
    color: var(--components-tooltip-tooltip-contrast-text);
    background: var(--components-tooltip-tooltip-contrast-fill);
    box-shadow: t.$shadows-box-shadow-contrast;
  }

  &__close-button {
    float: right;
    color: var(--components-button-iconbutton-contrast-text);

    &:hover {
      background-color: var(--components-button-iconbutton-contrast-hover);
    }
    &:focus {
      outline: t.$outlines-focus;
      outline-color: var(--basecolors-stroke-focus-contrast);
      outline-offset: t.$outline-offsets-focus;
    }
    &:active {
      background-color: var(--components-button-iconbutton-contrast-active);
    }

    .eds-contrast & {
      color: var(--components-button-iconbutton-standard-text);
      &:hover {
        background-color: var(--components-button-iconbutton-standard-hover);
      }
      &:focus {
        outline: t.$outlines-focus;
        outline-color: var(--basecolors-stroke-focus-standard);
        outline-offset: t.$outline-offsets-focus;
      }
      &:active {
        background-color: var(--components-button-iconbutton-standard-active);
      }
    }
  }

  &::after {
    background: var(--components-tooltip-tooltip-standard-fill);
    content: '';
    height: 0.625rem;
    position: absolute;
    transform: rotate(45deg) translateY(0.125rem);
    width: 0.625rem;
    z-index: t.$z-indexes-behind;
    .eds-contrast & {
      background: var(--components-tooltip-tooltip-contrast-fill);
    }
  }
  &--error {
    background: var(--components-tooltip-tooltip-standard-fill-negative);
    border: solid var(--components-tooltip-tooltip-standard-fill-negative);
    color: var(--components-tooltip-tooltip-standard-text-negative);
    &::after {
      background: var(--components-tooltip-tooltip-standard-triangle-negative);
    }

    &::before {
      background: var(--components-tooltip-tooltip-standard-triangle-negative);
      content: '';
      height: 0.625rem + t.$border-widths-medium;
      position: absolute;
      transform: rotate(45deg) translateY(0.125rem);
      width: 0.625rem + t.$border-widths-medium;
      z-index: t.$z-indexes-behind;
    }
    .eds-contrast & {
      background: var(--components-tooltip-tooltip-contrast-fill-negative);
      color: var(--components-tooltip-tooltip-contrast-text-negative);
      border: solid var(--components-tooltip-tooltip-contrast-fill-negative);
      box-shadow: t.$shadows-box-shadow-contrast;
      &::after {
        background: var(--components-tooltip-tooltip-contrast-triangle-negative);
      }
      &::before {
        background: var(--components-tooltip-tooltip-contrast-triangle-negative);
      }
    }
    .eds-tooltip__close-button {
      color: var(--components-tooltip-tooltip-standard-icon-negative);
      .eds-contrast & {
        color: var(--components-tooltip-tooltip-contrast-icon-negative);
      }
    }
  }

  &--top {
    &::before {
      left: calc(50% - 0.375rem);
      bottom: calc(-0.5rem + #{t.$border-widths-small});
    }
    &::after {
      bottom: -0.2rem;
      left: calc(50% - 0.3125rem);
    }
  }

  &--top-start {
    &::after {
      bottom: -0.2rem;
    }
  }

  &--top-end {
    &::after {
      bottom: -0.2rem;
      right: 0.35rem;
    }
  }

  &--left {
    &::after {
      bottom: calc(50% - 0.3125rem);
      left: calc(100% - 0.25rem);
    }
  }

  &--right {
    &::after {
      bottom: calc(50% - 0.3125rem);
      right: calc(100% - 0.45rem);
    }
  }

  &--bottom {
    &::before {
      left: calc(50% - 6px);
      top: calc(-0.5rem - #{t.$border-widths-small});
    }
    &::after {
      left: calc(50% - 0.3125rem);
      top: -0.4rem;
    }
  }

  &--bottom-start {
    &::after {
      bottom: calc(100% - 0.25rem);
    }
  }

  &--bottom-end {
    &::after {
      bottom: calc(100% - 0.25rem);
      left: calc(100% - 1rem);
    }
  }
}
