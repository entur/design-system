@use '~@entur/tokens/dist/styles.scss' as t;

:root {
  --eds-table: 1; // Register that the styles are loaded!
}

.eds-table {
  border-collapse: collapse;
  width: 100%;

  &--fixed {
    table-layout: fixed;
  }

  &--sticky-header {
    position: relative;
  }

  &__data-cell {
    height: 3.75rem;
    padding: t.$space-default (t.$space-default + t.$space-extra-small);

    .eds-contrast & {
      border-bottom-color: t.$colors-blues-blue20;
    }

    .eds-table--middle & {
      padding: t.$space-extra-small t.$space-default;
      height: t.$space-extra-large3;
    }
    .eds-table--small & {
      padding: t.$space-extra-small2 t.$space-default;
      height: t.$space-extra-large;
    }

    &--padding-checkbox {
      width: t.$space-extra-large3;
      padding: t.$space-extra-small 0 t.$space-small
        (t.$space-medium + t.$space-extra-small2);
    }
    &--padding-radio {
      width: t.$space-extra-large3;
      padding: t.$space-medium 0 t.$space-medium
        (t.$space-medium + t.$space-extra-small2);
    }
    &--padding-overflow-menu {
      width: t.$space-extra-large3;
      padding: t.$space-medium t.$space-small;
    }

    &[class*='eds-table__data-cell--status'] {
      position: relative;
      &:before {
        left: 0;
        // Vertical padding + half height of circle
        top: calc(t.$space-default + (0.625rem / 2));
        content: '';
        position: absolute;
        height: 0.625rem; //10px
        width: 0.625rem;
        border-radius: 50%;
        .eds-table--small & {
          top: calc(t.$space-extra-small2 + (0.625rem / 2));
        }
        .eds-table--middle & {
          top: calc(t.$space-extra-small + (0.625rem / 2));
        }
      }
    }
    &--status {
      &-positive {
        &:before {
          background: t.$colors-validation-mint;
          .eds-contrast & {
            background: t.$colors-validation-mint-contrast;
          }
        }
      }
      &-negative {
        &:before {
          background: t.$colors-validation-lava;
          .eds-contrast & {
            background: t.$colors-validation-lava-contrast;
          }
        }
      }
      &-neutral {
        &:before {
          background: t.$colors-greys-grey60;
          .eds-contrast & {
            background: t.$colors-blues-blue60;
          }
        }
      }
    }
  }

  &__body {
    > .eds-table__row {
      border-bottom: t.$border-widths-default solid t.$colors-greys-grey70;
      .eds-contrast & {
        border-color: t.$colors-blues-blue20;
      }
      &:focus {
        outline: t.$outlines-focus;
      }
      &--hover {
        &:hover {
          background: t.$colors-greys-grey80;
          .eds-contrast & {
            background: t.$colors-blues-blue10;
          }
        }
      }
      &--active {
        background: t.$colors-blues-blue80;
        border: t.$border-widths-medium solid t.$colors-blues-blue70;
        .eds-contrast & {
          border-color: t.$colors-blues-blue20;
          background: t.$colors-blues-blue20;
        }
      }
      &--error {
        background: t.$colors-validation-lava-tint;
        border-color: t.$colors-validation-lava-contrast;
      }
    }
  }
  &__head {
    border-bottom: t.$border-widths-default solid t.$colors-greys-grey70;
    .eds-contrast & {
      border-color: t.$colors-blues-blue20;
    }

    .eds-table--sticky-header & {
      position: sticky;
      top: 0;
    }
    .eds-table--sticky-header--active & {
      box-shadow: 0px 10px 8px -10px rgba(0, 0, 0, 0.15);
      border-bottom: none;
    }
  }
}
