@use '@entur/tokens/dist/styles.scss' as t;

.eds-dropdown {
  cursor: pointer;
  &__input {
    flex: 1;
    width: 0; // this makes the input act as if it has 'fit-content'

    &--hidden {
      flex: 0;
    }

    &__wrapper {
      flex: 1 1 auto;
      display: flex;
    }
  }

  &__selected-item {
    flex: 1;
    height: 100%;
    min-height: calc(3rem - (2 * t.$border-widths-default));
    padding: 1.25rem t.$space-none t.$space-extra-small2;
    overflow-x: hidden;
    text-overflow: ellipsis;
    line-height: t.$line-heights-small;

    &:focus {
      outline: none;
    }
  }

  &--searchable {
    cursor: text;
    &__selected-item {
      position: relative;
      flex: 1;
      overflow-x: hidden;
      text-overflow: ellipsis;
      padding: 1.375rem t.$space-none t.$space-extra-small2;
      white-space: nowrap;
      line-height: t.$line-heights-small;
      font-family: inherit;

      &--hidden {
        flex: 0;
      }
    }
  }

  &--multiselect {
    cursor: text;
    &__selected-items-and-input {
      display: flex;
      flex-wrap: wrap;
      flex: 1;
      gap: 0.5rem;
      min-width: 0; // needed to avoid overflow in flex child

      &--filled {
        padding: 1.25rem t.$space-none 0.25rem;

        .eds-dropdown__input {
          padding: unset;
          min-height: 1.5rem;
        }

        .eds-tag-chip {
          &:focus {
            box-shadow: t.$shadows-focus;
          }
          &__close-button svg {
            width: 1rem;
            height: 1rem;
          }
        }
      }
    }
  }

  &--native {
    + .eds-form-control__append {
      margin-left: -2em;
      pointer-events: none;
    }

    // Override for Windows
    & option {
      color: var(--components-form-basemenu-text);
      background-color: var(--components-form-basemenu-fill-default);
      .eds-contrast & {
        color: var(--components-form-basemenu-text);
      }
    }
  }
}
