@use '@entur/tokens/dist/styles.scss' as t;

.eds-dropdown {
  &__selected-item-tag {
    // revert contrast styling since dropdown field always is light
    .eds-contrast & {
      background: var(--components-chip-standard-default);
      border: t.$border-widths-small solid var(--components-chip-standard-border);
      color: var(--components-chip-standard-text-unselected);

      &:hover {
        border-color: var(--components-chip-standard-border);
        background-color: var(--components-chip-standard-hover);
      }
      &:active {
        background-color: var(--components-chip-standard-active);
        border-color: transparent;
      }

      .eds-tag-chip__close-button {
        color: var(--components-chip-standard-text-unselected);

        &:hover {
          background-color: var(--components-chip-standard-hover);
        }
        &:focus {
          outline-color: var(--basecolors-stroke-focus-standard);
        }
      }
    }

    &--readonly,
    &--disabled {
      padding-right: 0.5rem;
      .eds-tag-chip__close-button {
        display: none;
      }
    }

    &--readonly {
      .eds-contrast & {
        background-color: var(--components-form-baseform-standard-fill-readonly);
        border-color: transparent;
        color: var(--components-dropdown-dropdown-standard-text-readonly);

        background-color: inherit;
        border-color: inherit;
        color: inherit;
      }
    }

    &--disabled {
      .eds-contrast & {
        background-color: var(--components-dropdown-dropdown-standard-fill-disabled);
        border-color: transparent;
        color: var(--components-dropdown-dropdown-standard-text-disabled);
      }
    }

    &__text {
      text-wrap: nowrap;
      text-overflow: ellipsis;
      overflow-x: hidden;
    }
  }

  // This is done to remove contrast specific styling
  .eds-icon-button {
    .eds-contrast & {
      color: var(--components-button-iconbutton-standard-text);

      &:hover {
        background-color: var(--components-button-iconbutton-standard-hover);
      }
      &:focus {
        outline: t.$outlines-focus;
        outline-color: var(--basecolors-stroke-focus-standard);
        outline-offset: t.$outline-offsets-focus;
      }
      &:active {
        background-color: var(--components-button-iconbutton-standard-active);
      }
    }
  }

  &__appendix {
    display: flex;
    align-items: center;

    &__clear-button {
      padding: t.$space-extra-small;
      margin-right: t.$space-extra-small2;

      .eds-contrast & {
        &:hover {
          background-color: var(--components-button-iconbutton-standard-hover);
        }

        &:focus {
          outline-color: var(--basecolors-stroke-focus-standard);
        }
      }

      &__tooltip {
        white-space: nowrap;
      }
    }

    &__divider {
      content: '';
      display: block;
      background-color: var(--components-dropdown-dropdown-standard-text-content);
      height: 1.5rem;
      width: 1px;
    }

    &__toggle-button {
      margin-right: -(t.$space-small);
      margin-left: t.$space-extra-small2;

      &--open svg {
        transform: rotate(180deg);
      }

      svg {
        transition: transform ease-in-out t.$timings-fast;
      }

      &--loading-dots {
        align-items: center;
        display: flex;
        justify-content: center;
        height: 100%;
        width: 1.5rem;
        margin-left: 0.25rem;
        .eds-loading-dots__dot {
          background-color: var(--components-loader-loader-standard-text);
          .eds-contrast & {
            background-color: var(--components-loader-loader-standard-text);
          }
        }
      }

      .eds-contrast & {
        &:hover {
          background-color: var(--components-button-iconbutton-standard-hover);
        }
        &:focus {
          outline-color: var(--basecolors-stroke-focus-standard);
        }
      }
    }
  }
}
