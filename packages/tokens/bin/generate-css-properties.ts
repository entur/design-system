import toCase from 'case';
import path from 'path';
import fs from 'fs-extra';
import * as tokens from '../src';

function stringify([key, value]: any): any {
  if (typeof value === 'string') {
    return `  --${key}: ${value};\n`;
  }
  if (typeof value === 'number') {
    return `  --${key}: ${value}px;\n`;
  }

  return Object.entries(value)
    .map(([nextKey, nextValue]) => {
      const result = stringify([
        `${toCase.kebab(key)}-${toCase.kebab(nextKey)}`,
        nextValue,
      ]);
      return Array.isArray(result) ? result.join('') : result;
    })
    .join('');
}

function run() {
  const cssString = `
/* DO NOT CHANGE!*/
/* This file is automatically generated from @entur/tokens! Changes will be overwritten. */
:root {
${Object.entries(tokens)
  .map(token => stringify(token))
  .join('\n')}
}
`;
  fs.outputFileSync(path.resolve('dist', 'tokens.css'), cssString);
  console.log('âœ… Created file with CSS properties');
}
run();
