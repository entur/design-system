@use '@entur/tokens/dist/styles.scss' as t;
@use '@entur/utils/dist/breakpoints.scss' as breakpoint;

.eds-media-card {
  display: flex;
  overflow: hidden;
  position: relative;
  align-items: stretch;
  flex-direction: column;
  width: fit-content;
  gap: t.$space-default;
  padding: t.$space-large t.$space-extra-large t.$space-extra-large t.$space-extra-large;
  transition: transform t.$timings-medium ease-in-out, box-shadow t.$timings-medium ease-in-out;

  @include breakpoint.for-desktop {
    &:not(.eds-media-card--vertical) {
      flex-direction: row;
    }
  }

  &__media {
    max-height: 15rem;
    display: flex;
    justify-content: space-around;

    img {
      width: 100%;
      object-fit: cover;
    }

    @include breakpoint.for-desktop {
      &:not(.eds-media-card--vertical) {
        align-self: stretch;
      }
    }
  }

  &__header {
    display: flex;
    flex-direction: column;
    margin-bottom: t.$space-small;

    &-title {
      font-size: t.$font-sizes-extra-large2;
      line-height: t.$line-heights-extra-large3;
      font-weight: t.$font-weights-heading;
      & * {
        margin: 0;
        margin-top: t.$space-default;
      }
    }

    &-title-icon {
      font-size: 1.53125rem;
      margin-right: t.$space-small;
    }

    &-highlight {
      width: t.$space-extra-large;
      height: 0.1875rem;
      background: var(--components-layout-card-standard-divide);
      opacity: var(--show-active-line);
      transition: width t.$timings-medium ease-in-out;
    }
  }
  &__content {
    p {
      margin-bottom: t.$space-default;

      @include breakpoint.for-desktop {
        margin-bottom: t.$space-large;
      }
    }
  }

  // Modifiers
  &--small {
    gap: t.$space-small;
    padding: t.$space-medium t.$space-large t.$space-large t.$space-large;

    .eds-media-card__content p {
      margin-bottom: t.$space-default;
    }
  }

  &--vertical {
    flex-direction: column;
    align-items: center;
    //min-width: 15.75rem;
    max-width: 24.5rem;

    .eds-media-card__media {
      align-self: center;
    }
  }

  &--illustration {
    .eds-media-card__media img {
      width: 12.5rem;
      height: 12.5rem;
    }
  }

  &--illustration.eds-media-card--small .eds-media-card__media img {
    width: 10rem;
    height: 10rem;
  }
}

// States only on a and button elements
a.eds-media-card,
button.eds-media-card {
  &:hover {
    background-color: var(--components-layout-card-standard-fill-hoveractive);
    box-shadow: 0.625rem 0.625rem 1rem var(--components-layout-card-standard-shadowlayer3),
      0.375rem 0.375rem 0.75rem var(--components-layout-card-standard-shadowlayer2),
      0.1875rem 0.1875rem 0.375rem var(--components-layout-card-standard-shadowlayer1);

    &:before {
      opacity: 1;
    }
    .eds-media-card__header-highlight {
      width: 5rem;
    }
    .eds-contrast & {
      background-color: var(--components-layout-card-contrast-fill-hoveractive);
      box-shadow: 0.625rem 0.625rem 1rem var(--components-layout-card-contrast-shadowlayer3),
        0.375rem 0.375rem 0.75rem var(--components-layout-card-contrast-shadowlayer2),
        0.1875rem 0.1875rem 0.375rem var(--components-layout-card-contrast-shadowlayer1);
    }
  }

  &:active {
    background-color: var(--components-layout-card-standard-fill-hoveractive);
    border: 1px solid var(--components-layout-card-standard-border-active);
    box-shadow: none;
    .eds-contrast & {
      background-color: var(--components-layout-card-contrast-fill-hoveractive);
      border-color: var(--components-layout-card-contrast-border-active);
      box-shadow: none;
    }
  }

  &:focus-visible {
    outline: t.$outlines-focus;
    outline-color: var(--basecolors-stroke-focus-standard);
    outline-offset: t.$outline-offsets-focus;

    .eds-contrast & {
      outline-color: var(--basecolors-stroke-focus-contrast);
    }
  }
}
