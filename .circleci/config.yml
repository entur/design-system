aliases:
  - &ssh-fingerprint
    fingerprints:
      - '02:85:42:40:c5:08:04:66:58:80:10:2f:60:97:38:c2'
version: 2
jobs:
  build:
    parallelism: 1
    resource_class: xlarge
    docker:
      - image: cimg/node:14.17.0
    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ .Branch }}-
            - yarn-v1-
      - restore_cache:
          name: Restore Docz/Gatsby Cache
          keys:
            - v06-docz-cache-{{ .Branch }}
            - v06-docz-cache-

      - add_ssh_keys: *ssh-fingerprint

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: build
          command: yarn build
      - save_cache:
          name: Save Docz/Gatsby Cache
          key: v06-docz-cache-{{ .Branch }}-{{ epoch }}
          paths:
            - .docz/.cache
            - .docz/public
      - persist_to_workspace:
          root: .
          paths:
            - '*'


  deploy-to-test: 
    resource_class: xlarge
    docker:
      - image: cimg/node:14.17.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Save token to a file
          command: echo $GOOGLE_APPLICATION_CREDENTIALS > /tmp/serviceaccount.preview.json
      - run:
          name: Deploy to staging
          command: GOOGLE_APPLICATION_CREDENTIALS=/tmp/serviceaccount.preview.json yarn firebase hosting:channel:deploy $CIRCLE_BRANCH --project=entur-design-system

  test:
    resource_class: xlarge
    docker:
      - image: cimg/node:14.17.0
    steps:
      - checkout

      - add_ssh_keys: *ssh-fingerprint

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ .Branch }}-
            - yarn-v1-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: build packages
          command: yarn build:packages
      - run:
          name: test
          command: yarn test && yarn lint

  deploy:
    parallelism: 1
    resource_class: xlarge
    docker:
      - image: cimg/node:14.17.0
    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ .Branch }}-
            - yarn-v1-
      - restore_cache:
          name: Restore Docz/Gatsby Cache
          keys:
            - v06-docz-cache-{{ .Branch }}
            - v06-docz-cache-

      - add_ssh_keys: *ssh-fingerprint

      - run:
          name: Save token to a file
          command: echo $GOOGLE_APPLICATION_CREDENTIALS > /tmp/serviceaccount.prod.json

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Deploy to production
          command: GOOGLE_APPLICATION_CREDENTIALS=/tmp/serviceaccount.prod.json yarn deploy-docs --project=entur-design-system
      - save_cache:
          name: Save Docz/Gatsby Cache
          key: v06-docz-cache-{{ .Branch }}-{{ epoch }}
          paths:
            - .docz/.cache
            - .docz/public
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master        
      - test:
          filters:
            branches:
              ignore:
                - master
      - deploy-to-test:
          requires:
            - build
            - test
          filters:
              branches:
                ignore:
                  - master
      - deploy:
          filters:
            branches:
              only:
                - master
