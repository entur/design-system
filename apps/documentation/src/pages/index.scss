@use "sass:map";
@use "../styles/variables.scss" as variables;
@use '~@entur/utils/dist/breakpoints.scss' as breakpoint;
@use '~@entur/tokens/dist/styles.scss' as eds;

.frontpage {
  display: flex;
  height: 100dvh;
  overflow-y: auto;
  flex-direction: column;
  perspective: 10px;
  background-color: var(--basecolors-frame-contrast);

  &__background {
    position: absolute;
    transform-style: preserve-3d;
    z-index: -1;
    opacity: 0.3;

    &__lines,
    &__topographic-top,
    &__topographic-bottom {
      display: block;
      transform-origin: center;
      height: 200rem;
      width: 400rem;
      position: absolute;
      top: -53%;
      left: 50vw;
      opacity: 0.3;
    }
    &__lines {
      transform: translateZ(-8px) translateX(-40rem) translateY(-7rem) scale(1.8);
    }
    &__topographic-top {
      transform: translateZ(-10px) translateX(-40rem) translateY(-7rem) scale(2);
    }
    &__topographic-bottom {
      transform: translateZ(-12px) translateX(-40rem) translateY(-7rem) scale(2.2);
    }
  }

  &__main {
    flex: 1;
    display: grid;
    position: relative;
    gap: eds.$space-default;
    grid-template-columns:
      1fr
      minmax(0px, 6rem) minmax(0px, 6rem)
      minmax(0px, 6rem) minmax(0px, 6rem)
      minmax(0px, 6rem) minmax(0px, 6rem)
      minmax(0px, 6rem) minmax(0px, 6rem)
      minmax(0px, 6rem) minmax(0px, 6rem)
      minmax(0px, 6rem) minmax(0px, 6rem)
      1fr;
    padding-top: variables.$navbar-height;

    &__hero {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: subgrid;
      height: fit-content;

      &__content {
        grid-column: 2 / -2;
        display: grid;
        grid-template-columns: subgrid;
        height: fit-content;
        padding-block: eds.$space-extra-large5;
        row-gap: eds.$space-default;

        &__main-heading {
          grid-column: span 12;
          display: flex;
          flex-direction: column;
          font-size: calc(eds.$font-sizes-extra-large5 * 2);

          @media screen and (max-width: map.get(variables.$breakpoints, 'tablet')) {
            gap: eds.$space-default;
          }

          &__end {
            display: block;
            font-size: eds.$font-sizes-extra-large5;
            color: var(--basecolors-text-highlight);
          }
        }
        &__secondary-heading {
          grid-column: span 12;
          margin-block-start: eds.$space-extra-large9;
        }
        &__navigation-cards {
          &__card {
            grid-column: span 4;

            @media screen and (max-width: map.get(variables.$breakpoints, 'tablet')) {
              grid-column: span 6;
            }
            @media screen and (max-width: map.get(variables.$breakpoints, 'mobile')) {
              grid-column: span 12;
            }
          }
        }
      }
    }
    &__section {
      grid-column: 1 / -1;
      position: relative;
      height: 100%;
      display: grid;
      grid-template-columns: subgrid;
      align-content: start;
      row-gap: eds.$space-default;
      padding-block: eds.$space-extra-large5;
      margin-top: eds.$space-extra-large5;

      background-color: var(--section-color);

      > * {
        grid-column: 2 / -2;
        width: fit-content;
      }

      h1,
      h2,
      h3,
      p {
        grid-column: 2 / span 6;

        @media screen and (max-width: map.get(variables.$breakpoints, 'mobile')) {
          grid-column: 2 / span 12;
        }
      }
    }
  }
}

// Animation for header
.shifting-header {
  position: relative;
  height: 5.2rem;
  overflow: hidden;
  width: 100%;
  animation: scrollInOut 5s ease-out infinite;

  @media (prefers-reduced-motion) {
    animation: fadeInOut 5s ease-out infinite;
  }
}

@keyframes scrollInOut {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  10% {
    opacity: 1;
    transform: translateY(0);
  }
  80% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(40px);
  }
}
@keyframes fadeInOut {
  0% {
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
